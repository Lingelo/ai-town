# AI Town - Optimized Docker Image for Docker Hub
# Multi-stage build for production deployment

# Build stage
FROM node:18-alpine AS builder

# Install build dependencies for native modules
RUN apk add --no-cache python3 make g++

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies  
RUN npm install

# Copy source code and configuration
COPY . .

# Build arguments for runtime configuration
ARG VITE_LANGUAGE=en
ARG BUILD_VERSION=latest

# Set build environment variables
ENV NODE_ENV=production
ENV VITE_LANGUAGE=${VITE_LANGUAGE}
ENV BUILD_VERSION=${BUILD_VERSION}

# Temporarily modify vite.config.ts for Docker build
RUN sed -i "s|base: '/ai-town'|base: '/'|" vite.config.ts

# Build the application
RUN npm run build

# Production stage
FROM nginx:1.24-alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy optimized nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Copy configuration files for runtime
COPY --from=builder /app/config /usr/share/nginx/html/config

# Add labels for Docker Hub  
ARG BUILD_VERSION=latest
LABEL maintainer="AI Town Community" \
      version="$BUILD_VERSION" \
      description="AI Town - Virtual town where AI characters live, chat and socialize" \
      org.opencontainers.image.title="AI Town" \
      org.opencontainers.image.description="A virtual town where AI characters live, chat and socialize" \
      org.opencontainers.image.url="https://github.com/Lingelo/ai-town" \
      org.opencontainers.image.source="https://github.com/Lingelo/ai-town" \
      org.opencontainers.image.version="$BUILD_VERSION" \
      org.opencontainers.image.licenses="MIT"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]